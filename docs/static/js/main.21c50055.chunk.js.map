{"version":3,"sources":["componentes/AddCategoria.js","helpers/getGifts.js","componentes/GifGridItem.js","componentes/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategoria","setCategorias","useState","valorInput","setValorInicial","onSubmit","e","preventDefault","trim","length","categ","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","estado","setEstado","useEffect","then","imgs","setTimeout","useFetchGifs","imagenes","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"qMAGe,SAASA,EAAT,GAAwC,IAAjBC,EAAgB,EAAhBA,cAAgB,EACZC,mBAAS,IADG,mBAC3CC,EAD2C,KAC/BC,EAD+B,KAmBlD,OACI,mCACI,sBAAMC,SAdM,SAACC,GAEjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAK,OACNP,GADM,mBACQO,OAE3BN,EAAgB,MAMhB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAtBS,SAAEP,GACvBF,EAAgBE,EAAEQ,OAAOF,c,mCCNlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEfC,EAFe,iDAEgCC,UAAWH,GAF3C,+DAGHI,MAAMF,GAHH,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAGFC,EAAMD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXrB,kBAedM,GAfc,4CAAH,sDCCTO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE/B,OACI,sBAAKc,UAAU,yCAAf,UACQ,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCHRO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAAgB,ECAd,SAACA,GAAe,IAAD,EAEXd,mBAAS,CACjCqB,KAAK,GACLa,SAAQ,IAJ2B,mBAEhCC,EAFgC,KAExBC,EAFwB,KAoBvC,OAZAC,qBAAU,WACNxB,EAASC,GACJwB,MAAM,SAAAC,GACHC,YAAW,WACPJ,EAAU,CACNf,KAAKkB,EACLL,SAAQ,MAEb,UAEb,CAACpB,IAEIqB,EDlB0BM,CAAa3B,GAAlC4B,EAF0B,EAE/BrB,KAAea,EAFgB,EAEhBA,QAStB,OACI,qCACI,6BAAMpB,IACLoB,GAAW,mBAAGJ,UAAU,wCAAb,wBACZ,qBAAKA,UAAU,YAAf,SACSY,EAASnB,KAAM,SAAAC,GACZ,OACI,cAAC,EAAD,eAESA,GADAA,EAAIC,aEc1BkB,EA9BI,WAAI,MAEqB3C,mBAAS,CAAC,gBAF/B,mBAER4C,EAFQ,KAEI7C,EAFJ,KAUf,OACI,qCACI,8CACA,cAACD,EAAD,CAAeC,cAAgBA,IAC/B,uBAEA,6BACM6C,EAAWrB,KAAK,SAAAT,GACd,OACI,cAAC,EAAD,CAEIA,UAAYA,GADNA,Y,MCpBtC+B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.21c50055.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function AddCategoria({setCategorias}) {\r\n    const [valorInput, setValorInicial] = useState('')\r\n\r\n    const handleInputvalue = ( e ) => {\r\n        setValorInicial(e.target.value);\r\n    }\r\n    \r\n    const handleSubmit= (e) => {\r\n        //para evitar el refresh de la pagina\r\n        e.preventDefault();\r\n\r\n        if (valorInput.trim().length > 2 ){\r\n            setCategorias(categ =>\r\n                        [valorInput,...categ]\r\n            );\r\n            setValorInicial('');\r\n            }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={ handleSubmit }>\r\n                <input \r\n                    type=\"text\"\r\n                    value={ valorInput }\r\n                    onChange={ handleInputvalue }\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nAddCategoria.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}","\r\n  export const getGifs = async ( categoria )=>{\r\n\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${ encodeURI( categoria ) }&limit=10&api_key=uklE2FiTylS0Zo6DNH8ySWP7YEjN4fJU`;\r\n    const resp= await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    //guardo los datos que necesito\r\n    const gifs= data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url  //el signo de pregunta es para que cargue le dato si es distinto a vaciko\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n                <img src={ url } alt={ title } />\r\n                <p>{ title }</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n\r\n    const {data:imagenes, loading }= useFetchGifs(categoria);\r\n\r\n    // useEffect(() => {\r\n    //     getGifs( categoria )\r\n    //         .then( gifimgs => setImagenes( gifimgs)) ;\r\n    //     }, [categoria])\r\n\r\n  \r\n    \r\n    return (\r\n        <>\r\n            <h3>{ categoria }</h3>\r\n            {loading && <p className=\"card animate__animated animate__flash\">Cargando..</p>}\r\n            <div className=\"card-grid\">\r\n                    {imagenes.map ( img =>{\r\n                        return(\r\n                            <GifGridItem \r\n                                key={img.id}\r\n                                { ...img }  ///se esta forma devuelvo com propiedades independientes los atributos de img y el el otro compotenen las pbtrenfo con desestructuracion\r\n                            />\r\n                        )\r\n                    })}\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifts';\r\n\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n\r\n    const [estado, setEstado] = useState({\r\n        data:[],\r\n        loading:true\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( categoria )\r\n            .then( imgs => {\r\n                setTimeout(() => {\r\n                    setEstado({\r\n                        data:imgs,\r\n                        loading:false\r\n                    });\r\n                }, 3000);\r\n            });\r\n    },[categoria]);\r\n\r\n    return estado;\r\n\r\n}","import React, {useState} from 'react';\r\nimport AddCategoria from './componentes/AddCategoria';\r\nimport { GifGrid } from './componentes/GifGrid';\r\n\r\n\r\n\r\n\r\nconst GifExpertApp=()=>{\r\n        //const categorias=['One Punch','Samuari X', 'Dragon Ball']\r\n        const [categorias, setCategorias] = useState(['Dragon Ball']);///useState(['One Punch','Samuari X', 'Dragon Ball']);\r\n\r\n        // const handleAgregar =()=>{\r\n        //     ///categ es el valor anteririo que tiene el state\r\n        //     setCategorias(categ =>\r\n        //         [...categ,'Mazinger Z']\r\n        //     );\r\n        // }\r\n        return (\r\n            <>\r\n                <h2>GifExpertApp</h2>\r\n                <AddCategoria  setCategorias={ setCategorias } />\r\n                <hr/>\r\n                \r\n                <ol>\r\n                    { categorias.map( categoria =>{\r\n                        return (\r\n                            <GifGrid \r\n                                key={ categoria }\r\n                                categoria= {categoria}\r\n                            />\r\n                        )\r\n                    })}\r\n                </ol>\r\n            </>\r\n        )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GifExpertApp from './GifExpertApp';\r\nimport './index.css';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  \r\n    <GifExpertApp />\r\n ,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}